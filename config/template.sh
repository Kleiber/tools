#!/usr/bin/env bash

## author: KleiberXD

set -e

function linux_os_template() {
    local dir=${1}
    local filename=${2}
    local debugRefPath=${3}

    cat > "${dir}/${filename}" <<-EOF
/**
*  Generated by tpp tool
*  File: ${filename}
*  Created: $(date +"%d-%m-%Y %T")
**/

#include <bits/stdc++.h>
using namespace std;

// remove this reference to debug.h before your submission
#include "${debugRefPath}/debug.h"

int main() {
    // do not remove this code if you use cin or cout
    ios::sync_with_stdio(false);
    cin.tie(0);

    return 0;
}

EOF
}

function mac_os_template {
    local dir=${1}
    local filename=${2}
    local debugRefPath=${3}

    cat > "${dir}/${filename}" <<-EOF
/**
*  Generated by tpp tool
*  File: ${filename}
*  Created: $(date +"%d-%m-%Y %T")
**/

#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <bitset>
#include <sstream>
#include <set>
#include <map>
#include <unordered_map>
#include <unordered_set>
#include <queue>
#include <stack>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
using namespace std;

// remove this reference to debug.h before your submission
#include "${debugRefPath}/debug.h"

int main() {
    // do not remove this code if you use cin or cout
    ios::sync_with_stdio(false);
    cin.tie(0);

    return 0;
}

EOF
}

config_template() {
    local filename=${1}
    local configFile=${2}

    cat > ${configFile} <<-EOF
[info]
    name = $filename
    create = $(date +"%d-%m-%Y %H:%M:%S")
    judge = empty
    tag = empty
    update = $(date +"%d-%m-%Y %H:%M:%S")
    test = Pending
EOF
}